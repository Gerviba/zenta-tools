<?xml version="1.0" encoding="UTF-8"?>

<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:functx="http://www.functx.com"
			   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			   xmlns:archimate="http://www.archimatetool.com/archimate"
			   xmlns:zenta="http://magwas.rulez.org/zenta"
			   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
               stylesheet="../enrich.xslt">

	<x:variable name="testData" href="testData.xml"/>
	<x:variable name="virtRelationTestData" href="relationtovirtual.xml"/>

   <x:scenario label="changetype mode changes element types">
      <x:context mode="changetype">
      	<zenta:model xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:zenta="http://magwas.rulez.org/zenta" name="Ada" id="d3202427" version="2.2.1">
		    <element xsi:type="zenta:BasicObject" name="Basic Object" id="basicobject" children="238bb246"/>
		    <element xsi:type="zenta:BasicObject" name="Environment Element" id="238bb246" ancestor="basicobject" children="f362356f 32181c01 fe465fff"/>
			<element xsi:type="zenta:ZentaDiagramModel" name="Metamodel" id="9f17e235">
			      <child xsi:type="zenta:DiagramObject" id="11fb86ec" fillColor="#1e90ff" elementShape="ellipseShape" zentaElement="238bb246">
			        <bounds x="362" y="91" width="-1" height="-1"/>
			        <sourceConnection xsi:type="zenta:Connection" id="bbf4a052" source="11fb86ec" target="4960017f" lineDecoration="SmallEndArrowDecoration" relationship="0f27eeaa"/>
			      </child>
			</element>
		    <element xsi:type="zenta:BasicObject" name="an Environment element" id="f362356f" ancestor="238bb246"/>
	    </zenta:model>
      </x:context>
      <x:expect label="The root object remains zenta:BasicObject"
      	test="//element[@id='basicobject']/@xsi:type = 'zenta:BasicObject'"/>
      <x:expect label="objects without ancestor remain the same type"
      	test="//element[@id='9f17e235']/@xsi:type = 'zenta:ZentaDiagramModel'"/>
      <x:expect label="A Basic Object will be 'Ada:Basic Object'"
      	test="//element[@id='238bb246']/@xsi:type = 'Ada:Basic Object'"/>
      <x:expect label="A Environment Element will be 'Ada:Environment Element'"
      	test="//element[@id='f362356f']/@xsi:type = 'Ada:Environment Element'"/>
   </x:scenario>

   <x:scenario label="enrich mode insert value for connections">
      <x:context mode="enrich" select="$testData"/>
      <x:expect label="objects get 'value' subelements for each of the connections of the ancestor"
      	test="count(//element[@id='anObjective']/value) >=1 "
      />
      <x:expect label="value have a target attribute with the id of the target element"
      	test="//element[@id='anObjective']/value/@target='anElement'"
      />
      <x:expect label="there is a value for forward relations"
      	test="//element[@id='anElement']/value[@target='anObjective']/@direction = 1"
      />
      <x:expect label="there is a value for backward relations"
      	test="//element[@id='anObjective']/value[@target='anElement']/@direction = 2"
      />
      <x:expect label="value have the target name in the 'name' attribute"
      	test="//element[@id='anObjective']/value/@name='an Environment Element'"
      />
      <x:expect label="number of values corresponds to relations of the object (case 2)"
      	test="count(//element[@id='anObjective']/value)=2"
      />
      <x:expect label="number of values corresponds to relations of the object"
      	test="count(//element[@id='anElement']/value)=1"
      />
      <x:expect label="there is an error if there are less than minOccurs instances of values of a relation type to an element"
      	test="//error[@element='anElement']/@type='less than minOccurs values'"
      />
      <x:expect label="the error message contains the id of the defining relation"
      	test="//error[@element='anElement']/@id='influencesClass'"
      />
      <x:expect label="the error message contains the name of the defining relation"
      	test="//error[@element='anElement']/@name='influences'"
      />
      <x:expect label="the minOccurs error message works backward as well"
      	test="//error[@element='aVision']/@name='influences'"
      />
      <x:expect label="the minOccurs error message contains the minOccurs value backwards"
      	test="//error[@element='anElement' and @id='influencesClass']/@minOccurs=5"
      />
      <x:expect label="the minOccurs error message contains the minOccurs value forwards"
      	test="//error[@element='aVision' and @id='influencesClass']/@minOccurs=3"
      />
   </x:scenario>

   <x:scenario label="relationships are broken to two unidirectional connections">
   	<x:context mode="enrich" select="$testData"/>
   	<x:expect label="there are connections with source attribute for relation sources"
   		test="//connection/@source='envElementClass'"/>
   	<x:expect label="the target attribute contains the target class for forward connections"
   		test="//connection[@source='envElementClass']/@target='objectiveClass'" />
   	<x:expect label="the direction attribute is 1 for forward connections"
   		test="//connection[@source='envElementClass']/@direction=1" />
   	<x:expect label="the direction attribute is 2 for backward connections"
   		test="//connection[@source='envElementClass']/@direction=1" />
   	<x:expect label="there is a minOccurs attribute for connections"
   		test="exists(//connection[@source='envElementClass']/@minOccurs)" />
   	<x:expect label="minOccurs is zero for relations without minOccurs property"
   		test="//connection[@source='envElementClass']/@minOccurs='0'" />
   	<x:expect label="minOccurs is the part before '/' of the minOccurs property if that exists"
   		test="//connection[@source='visionClass']/@minOccurs='3'" />

   	<x:expect label="there are connections with source attribute for relation targets"
   		test="//connection/@source='objectiveClass'"/>
   	<x:expect label="the target attribute contains the target class for backward connections"
   		test="//connection[@source='objectiveClass']/@target='envElementClass'" />
   	<x:expect label="the direction attribute is 2 for backward connections"
   		test="//connection[@source='objectiveClass']/@direction=2" />
   	<x:expect label="there is a minOccurs attribute for backward connections"
   		test="exists(//connection[@source='objectiveClass']/@minOccurs)" />
   	<x:expect label="minOccurs is zero for relations without minOccurs property also for backwards relations"
   		test="//connection[@source='objectiveClass']/@minOccurs='0'" />
   	<x:expect label="minOccurs is the part after '/' of the minOccurs property if that exists for backward relations"
   		test="//connection[@target='visionClass']/@minOccurs='5'" />
   	<x:expect label="connections have the ancestor attribute for the defining relation for backward relations"
   		test="//connection[@source='anElement']/@ancestor='definesClass'" />
   	<x:expect label="connections have the id attribute for the defining relation"
   		test="//connection[@source='anElement']/@id='aDefines'" />
   	<x:expect label="connections have the documentation of the relation"
   		test="//connection[@id='aDefines']/documentation/text()='This is a defines relation'" />
   	<x:expect label="connections have the ancestor name as ancestorName attribute"
   		test="//connection[@id='aDefines']/@ancestorName='defines'" />
   </x:scenario>

   <x:scenario label="enrich mode insert value for connections for indirect relations">
      <x:context mode="enrich" select="$virtRelationTestData"/>
      <x:expect label="connections are created for defining relationships"
      	test="//connection[@id='OSrelationID']/@source='machineID'"
      />
      <x:expect label="ancestry contains ancestor"
      	test="zenta:getAncestry(//element[@id='virtMachineInstanceID'],/)/@id = 'machineID'"
      />
      <x:expect label="ancestry contains basic object"
      	test="zenta:getAncestry(//element[@id='virtMachineInstanceID'],/)/@id = 'basicobject'"
      />
      <x:expect label="defining relations contain ones for ancestors"
      	test="zenta:getDefiningRelations(//element[@id='virtMachineInstanceID'],/)/@id = 'OSrelationID'"
      />
      <x:expect label="value is created for descendants"
      	test="//element[@id='virtMachineInstanceID']/value[@target='OSObjectInstanceID']/@name = 'linux'"
      />
    </x:scenario>

</x:description>
